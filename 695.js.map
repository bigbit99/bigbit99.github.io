{"version":3,"file":"695.js","mappings":"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","sources":["webpack://sleact-ts-front/./components/Loading.tsx","webpack://sleact-ts-front/./hooks/useInput.ts","webpack://sleact-ts-front/./pages/LogIn/index.tsx","webpack://sleact-ts-front/./pages/SignUp/styles.tsx","webpack://sleact-ts-front/./utils/fetcher.ts"],"sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Loading = () => {\n  return (\n    <Wrap>\n      <div></div>\n    </Wrap>\n  );\n};\n\nexport default Loading;\n\nconst Wrap = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: #441949;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  > div:nth-child(1) {\n    height: 70px;\n    width: 70px;\n    border-radius: 50%;\n    border: dashed 5px white;\n    -webkit-animation-name: spin;\n    -webkit-animation-duration: 2.5s;\n    -webkit-animation-iteration-count: infinite;\n    -webkit-animation-timing-function: linear;\n  }\n  @-webkit-keyframes spin {\n    from {\n      -webkit-transform: rotate(0deg);\n    }\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n","import { Dispatch, SetStateAction, useCallback, useState, ChangeEvent } from 'react';\n\ntype ReturnTypes<T> = [T, (e: ChangeEvent<HTMLInputElement>) => void, Dispatch<SetStateAction<T>>];\n\nconst useInput = <T>(initialData: T): ReturnTypes<T> => {\n  const [value, setValue] = useState(initialData);\n  const handler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value as unknown as T);\n  }, []);\n  return [value, handler, setValue];\n};\n\nexport default useInput;\n\n//🔥ts로 시작하는 에러는 타입스크립트 에러\n//🔥🔥ts가 js의 변수, 매개변수, return값에 타입을 붙여줘야함\n//🔥🔥🔥특히 매개변수는 타입을 붙여줘야 에러가 안난다.\n\n//as unknown as T -> 타입스크립트에서 타입을 강제로 바꿔주는 방법\n","import useInput from '@hooks/useInput';\nimport React, { useCallback, useState } from 'react';\nimport { Success, Form, Error, Label, Input, LinkContainer, Button, Header } from '@pages/SignUp/styles';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport useSWR from 'swr';\nimport Loading from '@components/Loading';\n\nconst LogIn = () => {\n  const { data, error, mutate } = useSWR('/api/users', fetcher);\n  // const { data, error, mutate } = useSWR('http://localhost:3095/api/users', fetcher, {\n  //   dedupingInterval: 100000, //주기적으로 호출은 되지만 dedupingInterval 기간 내에는 캐시에서 불러온다.\n  // }); //로그인 후 데이터를 전해줄 api\n  //swr자체는 별 역할을 안함.\n  //api부분이 fetcher함수의 매개변수로 넘어감\n  const [logInError, setLogInError] = useState(false);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      setLogInError(false);\n      axios\n        .post(\n          '/api/users/login',\n          { email, password },\n          {\n            withCredentials: true, //쿠키생성해줌\n          },\n        )\n        .then((response) => {\n          mutate(response.data, false);\n        })\n        .catch((error) => {\n          setLogInError(error.response?.data?.statusCode === 401);\n        });\n    },\n    [email, password],\n  );\n\n  if (data === undefined) {\n    return <Loading />;\n  }\n\n  if (data) {\n    return <Redirect to=\"/workspace/sleact/channel/일반\" />;\n  }\n\n  return (\n    <div id=\"container\">\n      <Header>Sleact</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n          {logInError && <Error>이메일과 비밀번호 조합이 일치하지 않습니다.</Error>}\n        </Label>\n        <Button type=\"submit\">로그인</Button>\n      </Form>\n      <LinkContainer>\n        아직 회원이 아니신가요?&nbsp;\n        <Link to=\"/signup\">회원가입 하러가기</Link>\n      </LinkContainer>\n    </div>\n  );\n};\n\nexport default LogIn;\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background-color: #4a154b;\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n  &:hover {\n    background-color: rgba(74, 21, 75, 0.9);\n    border: none;\n  }\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Error = styled.div`\n  color: #e01e5a;\n  margin: 8px 0 16px;\n  font-weight: bold;\n`;\n\nexport const Success = styled.div`\n  color: #2eb67d;\n  font-weight: bold;\n`;\n\nexport const LinkContainer = styled.p`\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import axios from 'axios';\n\nconst fetcher = (url: string) =>\n  axios\n    .get(url, {\n      withCredentials: true, //쿠키공유하기\n    })\n    .then((response) => response.data); //swr에서 넘겨준 api가 오면 axios.get요청을 보낸다\n//fetcher에서 넣은 주소를 매개변수로 넣어주고, 응답값에서 data꺼내 줌\nexport default fetcher;\n"],"names":["React","Wrap","styled","_templateObject","initialData","_useState2","useState","value","setValue","useCallback","e","target","_useSWR","useSWR","fetcher","data","mutate","error","_slicedToArray","logInError","setLogInError","_useInput2","useInput","email","onChangeEmail","_useInput4","password","onChangePassword","onSubmit","preventDefault","axios","withCredentials","then","response","catch","_error$response","_error$response$data","statusCode","undefined","Loading","Redirect","to","id","Header","Form","Label","Input","type","name","onChange","Error","Button","LinkContainer","Link","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","Success","_templateObject7","_templateObject8","url"],"sourceRoot":""}