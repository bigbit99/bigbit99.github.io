{"version":3,"file":"477.js","mappings":"4VA6DA,QA7CsC,SAAHA,GAA0D,I,IAApDC,EAAID,EAAJC,KAAMC,EAAYF,EAAZE,aAAcC,EAAyBH,EAAzBG,0BAC3DC,GAA+BC,EAAAA,EAAAA,MAAvBC,EAASF,EAATE,UAAWC,EAAOH,EAAPG,QAC8CC,G,GAAZC,EAAAA,EAAAA,GAAS,I,EAAG,E,k5BAA1DC,EAASF,EAAA,GAAEG,EAAiBH,EAAA,GAAEI,EAAYJ,EAAA,GACnCK,GAAaC,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,GAA/CC,KACQC,GAAsBH,EAAAA,EAAAA,IACpCD,GAAYN,EAAU,mBAAHW,OAAsBZ,EAAS,cAAAY,OAAaX,EAAO,YAAa,KACnFQ,EAAAA,GAFMI,OAKFC,GAAiBC,EAAAA,EAAAA,cACrB,SAACC,GACCA,EAAEC,iBACGb,GAAcA,EAAUc,QAG7BC,IAAAA,KACQ,mBAADP,OAAoBZ,EAAS,cAAAY,OAAaX,EAAO,YAAY,CAChEmB,MAAOhB,IAERiB,MAAK,WACJV,IACAd,GAA0B,GAC1BS,EAAa,GACf,IACCgB,OAAM,SAACC,GAAU,IAAAC,EAChBC,QAAQC,IAAIH,GACZI,EAAAA,GAAAA,MAA0B,QAAfH,EAACD,EAAMK,gBAAQ,IAAAJ,OAAA,EAAdA,EAAgBd,KAAM,CAAEmB,SAAU,iBAChD,GACJ,GACA,CAACzB,IAGH,OACE0B,EAAAA,cAACC,EAAAA,EAAK,CAACpC,KAAMA,EAAMC,aAAcA,GAC/BkC,EAAAA,cAAA,QAAME,SAAUlB,GACdgB,EAAAA,cAACG,EAAAA,GAAK,CAACC,GAAG,gBACRJ,EAAAA,cAAA,YAAM,YACNA,EAAAA,cAACK,EAAAA,GAAK,CAACD,GAAG,SAASE,MAAOhC,EAAWiC,SAAUhC,KAEjDyB,EAAAA,cAACQ,EAAAA,GAAM,CAACC,KAAK,UAAS,SAI9B,C,oLCzDO,IAAMC,EAAcC,EAAAA,EAAAA,IAAUC,IAAAA,EAAAC,EAAA,olBAyBxBC,EAAmBH,EAAAA,EAAAA,OAAaI,IAAAA,EAAAF,EAAA,mJ,WCF7C,QAlByB,SAAHjD,GAAyC,IAAnCC,EAAID,EAAJC,KAAMmD,EAAQpD,EAARoD,SAAUlD,EAAYF,EAAZE,aACpCmD,GAAkBhC,EAAAA,EAAAA,cAAY,SAACC,GACnCA,EAAE+B,iBACJ,GAAG,IAEH,OAAKpD,EAIHmC,EAAAA,cAACU,EAAW,CAACQ,QAASpD,GACpBkC,EAAAA,cAAA,OAAKkB,QAASD,GACZjB,EAAAA,cAACc,EAAgB,CAACI,QAASpD,GAAc,KACxCkD,IANE,IAUX,C,yKCXA,QARiB,SAAIG,GACnB,I,IAA+CC,G,GAArBC,EAAAA,EAAAA,UAASF,G,EAAY,E,k5BAAxCb,EAAKc,EAAA,GAAEE,EAAQF,EAAA,GAItB,MAAO,CAACd,GAHQrB,EAAAA,EAAAA,cAAY,SAACC,GAC3BoC,EAASpC,EAAEqC,OAAOjB,MACpB,GAAG,IACqBgB,EAC1B,C,mFCLME,EAAoD,CAAC,EAuB3D,QAtBkB,SAACtD,GACjByB,QAAQ8B,IAAI,WAAYvD,GACxB,IAAMwD,GAAazC,EAAAA,EAAAA,cAAY,WACzBf,IACFsD,EAAQtD,GAAWwD,oBACZF,EAAQtD,GAEnB,GAAG,CAACA,IAEJ,OAAKA,GAIAsD,EAAQtD,KACXsD,EAAQtD,GAAayD,IAAAA,QAAW,GAAD7C,OAjBnB,wBAiB8B,QAAAA,OAAOZ,GAAa,CAC5D0D,WAAY,CAAC,gBAIV,CAACJ,EAAQtD,GAAYwD,IATnB,MAACG,EAAWH,EAUvB,C,kFCxBaI,EAAiBnB,EAAAA,EAAAA,OAAaC,I,EAAA,qO,kBAAAA,E,2EAWvC,SAAAhD,GAAW,OAAAA,EAARmE,UACK,gDAKT,I,iKC2CH,QAnDwB,WACtB,I,IAAQ7D,GAAcD,EAAAA,EAAAA,MAAdC,UAGR8D,GAIItD,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,EAAS,CACvCsD,iBAAkB,MAJZxD,EAAQuD,EAAdpD,KAQYsD,GAPPF,EAALvC,MACMuC,EAANjD,QAM4BL,EAAAA,EAAAA,IAAmBD,EAAW,mBAAHK,OAAsBZ,EAAS,aAAc,KAAMS,EAAAA,GAApGC,MAEqDwC,G,GAAfC,EAAAA,EAAAA,WAAS,G,EAAM,E,k5BAAtDc,EAAef,EAAA,GAAEgB,EAAkBhB,EAAA,GAEpCiB,GAAwBpD,EAAAA,EAAAA,cAAY,WACxCmD,GAAmB,SAACE,GAAI,OAAMA,CAAI,GACpC,GAAG,IAEH,OACEtC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,UACEA,EAAAA,cAAC8B,EAAc,CAACC,SAAUI,EAAiBjB,QAASmB,GAClDrC,EAAAA,cAAA,KACEuC,UAAU,mKACV,UAAQ,2BACR,cAAY,UAGhBvC,EAAAA,cAAA,YAAM,aAERA,EAAAA,cAAA,YACImC,IACAD,aAAW,EAAXA,EAAaM,KAAI,SAACrE,GAChB,OACE6B,EAAAA,cAACyC,EAAAA,GAAO,CACNC,IAAKvE,EAAQwE,KACbC,gBAAgB,WAChBC,GAAE,cAAA/D,OAAgBZ,EAAS,aAAAY,OAAYX,EAAQwE,OAE/C3C,EAAAA,cAAA,YAAM,KAAG7B,EAAQwE,MAGvB,MAIV,E,iiCC4BA,QA/EmB,WACjB,IAAQzE,GAAcD,EAAAA,EAAAA,MAAdC,UAER8D,GAIItD,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,EAAS,CACvCsD,iBAAkB,MAJZxD,EAAQuD,EAAdpD,KAOYkE,GANPd,EAALvC,MACMuC,EAANjD,QAK2BL,EAAAA,EAAAA,IAC3BD,EAAW,mBAAHK,OAAsBZ,EAAS,YAAa,KACpDS,EAAAA,GAFMC,MAIDmE,EAA8BC,GAApBC,EAAAA,EAAAA,GAAU/E,GAAU,GAAxB,GACgDkD,EAAA4B,GAAf3B,EAAAA,EAAAA,WAAS,GAAM,GAAtDc,EAAef,EAAA,GAAEgB,EAAkBhB,EAAA,GACgB8B,EAAAF,GAAtB3B,EAAAA,EAAAA,UAAmB,IAAG,GAAnD8B,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE1Bb,GAAwBpD,EAAAA,EAAAA,cAAY,WACxCmD,GAAmB,SAACE,GAAI,OAAMA,CAAI,GACpC,GAAG,IAoBH,OAlBAe,EAAAA,EAAAA,YAAU,WACR1D,QAAQ8B,IAAI,wBAAyBvD,GACrCkF,EAAc,GAChB,GAAG,CAAClF,KAEJmF,EAAAA,EAAAA,YAAU,WAMR,OALAN,SAAAA,EAAQO,GAAG,cAAc,SAAC1E,GACxBwE,EAAcxE,EAChB,IAGO,WAGLmE,SAAAA,EAAQQ,IAAI,aACd,CACF,GAAG,CAACR,IAGF/C,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,UACEA,EAAAA,cAAC8B,EAAc,CAACC,SAAUI,EAAiBjB,QAASmB,GAClDrC,EAAAA,cAAA,KACEuC,UAAU,mKACV,UAAQ,2BACR,cAAY,UAGhBvC,EAAAA,cAAA,YAAM,oBAERA,EAAAA,cAAA,YACImC,IACAW,aAAU,EAAVA,EAAYN,KAAI,SAACgB,GACf,IAAMC,EAAWN,EAAWO,SAASF,EAAOpD,IAC5C,OACEJ,EAAAA,cAACyC,EAAAA,GAAO,CAACC,IAAKc,EAAOpD,GAAIwC,gBAAgB,WAAWC,GAAE,cAAA/D,OAAgBZ,EAAS,QAAAY,OAAO0E,EAAOpD,KAC3FJ,EAAAA,cAAA,KACEuC,UAAS,oGAAAzD,OACP2E,EAAW,6CAA+C,4BAE5D,cAAY,OACZ,UAAQ,qBACR,wBAAsB,QACtB,0BAAwB,QACxB,uBAAqB,UAEvBzD,EAAAA,cAAA,YAAOwD,EAAOG,UACbH,EAAOpD,MAAO3B,aAAQ,EAARA,EAAU2B,KAAMJ,EAAAA,cAAA,YAAM,QAG3C,MAIV,E,wLCzBA,QA7CwC,SAAHpC,GAA4D,I,IAAtDC,EAAID,EAAJC,KAAMC,EAAYF,EAAZE,aAAc8F,EAA2BhG,EAA3BgG,4BACrD1F,GAAcD,EAAAA,EAAAA,MAAdC,UACyDE,G,GAAZC,EAAAA,EAAAA,GAAS,I,EAAG,E,k5BAA1DC,EAASF,EAAA,GAAEG,EAAiBH,EAAA,GAAEI,EAAYJ,EAAA,GACnCK,GAAaC,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,GAA/CC,KACQiF,GAAqBnF,EAAAA,EAAAA,IACnCD,EAAW,mBAAHK,OAAsBZ,EAAS,YAAa,KACpDS,EAAAA,GAFMI,OAKFC,GAAiBC,EAAAA,EAAAA,cACrB,SAACC,GACCA,EAAEC,iBACGb,GAAcA,EAAUc,QAG7BC,IAAAA,KACQ,mBAADP,OAAoBZ,EAAS,YAAY,CAC5CoB,MAAOhB,IAERiB,MAAK,SAACO,GACL+D,IACAD,GAA4B,GAC5BpF,EAAa,GACf,IACCgB,OAAM,SAACC,GAAU,IAAAC,EAChBC,QAAQC,IAAIH,GACZI,EAAAA,GAAAA,MAA0B,QAAfH,EAACD,EAAMK,gBAAQ,IAAAJ,OAAA,EAAdA,EAAgBd,KAAM,CAAEmB,SAAU,iBAChD,GACJ,GACA,CAAC7B,EAAWI,IAGd,OACE0B,EAAAA,cAACC,EAAAA,EAAK,CAACpC,KAAMA,EAAMC,aAAcA,GAC/BkC,EAAAA,cAAA,QAAME,SAAUlB,GACdgB,EAAAA,cAACG,EAAAA,GAAK,CAACC,GAAG,gBACRJ,EAAAA,cAAA,YAAM,OACNA,EAAAA,cAACK,EAAAA,GAAK,CAACD,GAAG,SAASK,KAAK,QAAQH,MAAOhC,EAAWiC,SAAUhC,KAE9DyB,EAAAA,cAACQ,EAAAA,GAAM,CAACC,KAAK,UAAS,SAI9B,E,0HCzDO,IAAMqD,EAAanD,EAAAA,EAAAA,IAAUC,IAAAA,EAAAC,EAAA,giBAsBvBC,EAAmBH,EAAAA,EAAAA,OAAaI,IAAAA,EAAAF,EAAA,mJCfvCkD,EAAkB,SAAHnG,GAA6D,IAAvDoD,EAAQpD,EAARoD,SAAUgD,EAAKpG,EAALoG,MAAOnG,EAAID,EAAJC,KAAMC,EAAYF,EAAZE,aAAcmG,EAAWrG,EAAXqG,YACxDhD,GAAkBhC,EAAAA,EAAAA,cAAY,SAACC,GACnCA,EAAE+B,iBACJ,GAAG,IAEH,OAAKpD,EAGHmC,EAAAA,cAAC8D,EAAU,CAAC5C,QAASpD,GACnBkC,EAAAA,cAAA,OAAKgE,MAAOA,EAAO9C,QAASD,GACzBgD,GAAejE,EAAAA,cAACc,EAAgB,CAACI,QAASpD,GAAc,KACxDkD,IANW,IAUpB,EACA+C,EAAKG,aAAe,CAClBD,aAAa,GAGf,U,kJC3BO,IAAME,EAAYxD,EAAAA,EAAAA,IAAUC,IAAAA,EAAAC,EAAA,2BAItBuD,EAASzD,EAAAA,EAAAA,OAAaI,IAAAA,EAAAF,EAAA,iKAStBwD,EAAa1D,EAAAA,EAAAA,IAAU2D,IAAAA,EAAAzD,EAAA,+FAQvB0D,EAAe5D,EAAAA,EAAAA,IAAU6D,IAAAA,EAAA3D,EAAA,uUAqBzB4D,GAAe9D,EAAAA,EAAAA,OAAa+D,IAAAA,EAAA7D,EAAA,qNAY5B8D,GAAmBhE,EAAAA,EAAAA,IAAUiE,IAAAA,EAAA/D,EAAA,wCAK7BgE,GAAalE,EAAAA,EAAAA,IAAUmE,IAAAA,EAAAjE,EAAA,yRAavBkE,GAAWpE,EAAAA,EAAAA,IAAUqE,IAAAA,EAAAnE,EAAA,43BA+CrBoE,GAAgBtE,EAAAA,EAAAA,OAAauE,IAAAA,EAAArE,EAAA,qaAqB7BsE,GAAaxE,EAAAA,EAAAA,IAAUyE,IAAAA,EAAAvE,EAAA,+DAKvBwE,GAAiB1E,EAAAA,EAAAA,IAAU2E,IAAAA,EAAAzE,EAAA,sVAmB3B0E,GAAQ5E,EAAAA,EAAAA,IAAU6E,IAAAA,EAAA3E,EAAA,sBAIlB4E,GAAY9E,EAAAA,EAAAA,OAAa+E,IAAAA,EAAA7E,EAAA,2KAWzB8E,GAAkBhF,EAAAA,EAAAA,OAAaiF,IAAAA,EAAA/E,EAAA,uP,8IC7G5C,SAvDuC,SAAHjD,GAA0D,I,IAApDC,EAAID,EAAJC,KAAMC,EAAYF,EAAZE,aAAc+H,EAAyBjI,EAAzBiI,0BACQzH,G,GAAZC,EAAAA,EAAAA,GAAS,I,EAAG,E,o5BAA7DyH,EAAU1H,EAAA,GAAE2H,EAAkB3H,EAAA,GAAE4H,EAAa5H,EAAA,GACpDJ,GAA+BC,EAAAA,EAAAA,MAAvBC,EAASF,EAATE,UAER8D,GAF0BhE,EAAPG,SAMfO,EAAAA,EAAAA,IAAsB,aAAcC,EAAAA,EAAS,CAC/CsD,iBAAkB,OAJZxD,EAAQuD,EAAdpD,KAOFqH,GANOjE,EAALvC,MACMuC,EAANjD,QAKwDL,EAAAA,EAAAA,IACxDD,EAAW,mBAAHK,OAAsBZ,EAAS,aAAc,KACrDS,EAAAA,IAFiCuH,GAAVD,EAAjBrH,KAA6CqH,EAA1BlH,QAKrBoH,GAAkBlH,EAAAA,EAAAA,cACtB,SAACC,GACCA,EAAEC,iBACFE,IAAAA,KACQ,mBAADP,OACgBZ,EAAS,aAC5B,CACEyE,KAAMmD,GAER,CACEM,iBAAiB,IAGpB7G,MAAK,WACJsG,GAA0B,GAC1BG,EAAc,IACdE,GACF,IACC1G,OAAM,SAACC,GAAU,IAAAC,EAChBC,QAAQC,IAAIH,GACZI,EAAAA,GAAAA,MAA0B,QAAfH,EAACD,EAAMK,gBAAQ,IAAAJ,OAAA,EAAdA,EAAgBd,KAAM,CAAEmB,SAAU,iBAChD,GACJ,GACA,CAAC+F,EAAYE,EAAeH,EAA2B3H,IAEzD,OACE8B,EAAAA,cAACC,EAAAA,EAAK,CAACpC,KAAMA,EAAMC,aAAcA,GAC/BkC,EAAAA,cAAA,QAAME,SAAUiG,GACdnG,EAAAA,cAACG,EAAAA,GAAK,CAACC,GAAG,iBACRJ,EAAAA,cAAA,YAAM,MACNA,EAAAA,cAACK,EAAAA,GAAK,CAACD,GAAG,UAAUE,MAAOwF,EAAYvF,SAAUwF,KAEnD/F,EAAAA,cAACQ,EAAAA,GAAM,CAACC,KAAK,UAAS,SAI9B,E,shCCjCA,IAAM4F,IAAUC,EAAAA,GAAAA,KAAS,kBAAM,sDAAwB,IACjDC,IAAgBD,EAAAA,GAAAA,KAAS,kBAAM,qDAA8B,IAsMnE,SApMuB,WACrB,IAAuDlF,EAAA4B,IAAf3B,EAAAA,EAAAA,WAAS,GAAM,GAAhDmF,EAAYpF,EAAA,GAAEqF,EAAerF,EAAA,GAC2C8B,EAAAF,IAAf3B,EAAAA,EAAAA,WAAS,GAAM,GAAxEqF,EAAwBxD,EAAA,GAAEyD,EAA2BzD,EAAA,GACmB0D,EAAA5D,IAAf3B,EAAAA,EAAAA,WAAS,GAAM,GAAxEwF,EAAwBD,EAAA,GAAEhD,EAA2BgD,EAAA,GACeE,EAAA9D,IAAf3B,EAAAA,EAAAA,WAAS,GAAM,GAApE0F,EAAsBD,EAAA,GAAE/I,EAAyB+I,EAAA,GACWE,EAAAhE,IAAf3B,EAAAA,EAAAA,WAAS,GAAM,GAA5D4F,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAC2BG,EAAAnE,IAAf3B,EAAAA,EAAAA,WAAS,GAAM,GAApE+F,EAAsBD,EAAA,GAAEtB,EAAyBsB,EAAA,GACkB/I,EAAA4E,IAAZ3E,EAAAA,EAAAA,GAAS,IAAG,GAAnEgJ,EAAYjJ,EAAA,GAAEkJ,EAAoBlJ,EAAA,GAAEmJ,EAAenJ,EAAA,GACFoJ,EAAAxE,IAAZ3E,EAAAA,EAAAA,GAAS,IAAG,GAAjDoJ,EAAMD,EAAA,GAAEE,EAAcF,EAAA,GAAEG,EAASH,EAAA,GAEhCtJ,GAAcD,EAAAA,EAAAA,MAAdC,UACR8D,GAIItD,EAAAA,EAAAA,IAAsB,aAAcC,EAAAA,EAAS,CAC/CsD,iBAAkB,MAJZxD,EAAQuD,EAAdpD,KAEAG,GADKiD,EAALvC,MACMuC,EAANjD,QAIYmD,GAAgBxD,EAAAA,EAAAA,IAAmBD,EAAW,mBAAHK,OAAsBZ,EAAS,aAAc,KAAMS,EAAAA,GAApGC,KAEyCgJ,IADpBlJ,EAAAA,EAAAA,IAAgBD,EAAW,mBAAHK,OAAsBZ,EAAS,YAAa,KAAMS,EAAAA,GAA/FC,KACyCoE,IAApBC,EAAAA,EAAAA,GAAU/E,GAAU,IAA1C6E,EAAM6E,EAAA,GAAElG,EAAUkG,EAAA,IAEzBvE,EAAAA,EAAAA,YAAU,WACJnB,GAAezD,GAAYsE,IAC7BpD,QAAQ8B,IAAIsB,GACZA,EAAO8E,KAAK,QAAS,CAAEzH,GAAI3B,EAAS2B,GAAI0H,SAAU5F,EAAYM,KAAI,SAACuF,GAAC,OAAKA,EAAE3H,EAAE,MAEjF,GAAG,CAAC2C,EAAQb,EAAazD,KACzB4E,EAAAA,EAAAA,YAAU,WACR,OAAO,WACL3B,GACF,CACF,GAAG,CAACxD,EAAWwD,IAEf,IAAMsG,IAAW/I,EAAAA,EAAAA,cAAY,WAC3BI,IAAAA,KACQ,oBAAqB,KAAM,CAC/B+G,iBAAiB,IAElB7G,MAAK,WACJR,GAAO,GAAO,EAChB,GACJ,GAAG,IAEGkJ,IAAqBhJ,EAAAA,EAAAA,cAAY,SAACC,GACtCA,EAAE+B,kBACFwF,GAAgB,EAClB,GAAG,IAEGyB,IAAqBjJ,EAAAA,EAAAA,cAAY,WACrCwH,GAAgB,SAACnE,GAAI,OAAMA,CAAI,GACjC,GAAG,IAEG6F,IAAyBlJ,EAAAA,EAAAA,cAAY,WACzC0H,GAA4B,EAC9B,GAAG,IAEGyB,IAAoBnJ,EAAAA,EAAAA,cACxB,SAACC,GACCA,EAAEC,iBACGkI,GAAiBA,EAAajI,QAC9BqI,GAAWA,EAAOrI,QACvBC,IAAAA,KAEI,kBACA,CACEnB,UAAWmJ,EACXgB,IAAKZ,GAEP,CACErB,iBAAiB,IAGpB7G,MAAK,WACJR,IACA4H,GAA4B,GAC5BY,EAAgB,IAChBI,EAAU,GACZ,IACCnI,OAAM,SAACC,GAAU,IAAAC,EAChBC,QAAQC,IAAIH,GACZI,EAAAA,GAAAA,MAA0B,QAAfH,EAACD,EAAMK,gBAAQ,IAAAJ,OAAA,EAAdA,EAAgBd,KAAM,CAAEmB,SAAU,iBAChD,GACJ,GACA,CAACsH,EAAcI,IAGX3J,IAAemB,EAAAA,EAAAA,cAAY,WAC/B0H,GAA4B,GAC5Bd,GAA0B,GAC1BjC,GAA4B,GAC5B7F,GAA0B,EAC5B,GAAG,IAEGuK,IAAuBrJ,EAAAA,EAAAA,cAAY,WACvCiI,GAAsB,SAAC5E,GAAI,OAAMA,CAAI,GACvC,GAAG,IAEGiG,IAAoBtJ,EAAAA,EAAAA,cAAY,WACpC4G,GAA0B,EAC5B,GAAG,IAEG2C,IAAyBvJ,EAAAA,EAAAA,cAAY,WACzC2E,GAA4B,EAC9B,GAAG,IAEH,OAAKnF,EAKHuB,EAAAA,cAAA,WACEA,EAAAA,cAACoE,EAAM,KACLpE,EAAAA,cAACmE,EAAS,KACRnE,EAAAA,cAAA,QAAMkB,QAASgH,IACblI,EAAAA,cAACqE,EAAU,CAACoE,IAAKC,KAAAA,IAAajK,EAASa,MAAO,CAAEqJ,EAAG,OAAQC,EAAG,UAAYC,IAAKpK,EAASkF,WACvF6C,GACCxG,EAAAA,cAAC+D,EAAI,CAACC,MAAO,CAAE8E,MAAO,EAAGC,IAAK,IAAMlL,KAAM2I,EAAc1I,aAAcmK,IACpEjI,EAAAA,cAACuE,EAAY,KACXvE,EAAAA,cAAA,OAAKyI,IAAKC,KAAAA,IAAajK,EAASkF,SAAU,CAAEgF,EAAG,OAAQC,EAAG,UAAYC,IAAKpK,EAASkF,WACpF3D,EAAAA,cAAA,WACEA,EAAAA,cAAA,QAAMI,GAAG,gBAAgB3B,EAASkF,UAClC3D,EAAAA,cAAA,QAAMI,GAAG,kBAAiB,YAG9BJ,EAAAA,cAACyE,GAAY,CAACvD,QAAS8G,IAAU,YAM3ChI,EAAAA,cAAC2E,GAAgB,KACf3E,EAAAA,cAAC6E,GAAU,KACRpG,aAAQ,EAARA,EAAUoG,WAAWrC,KAAI,SAACwG,GACzB,OACEhJ,EAAAA,cAACiJ,EAAAA,GAAI,CAACvG,IAAKsG,EAAG5I,GAAIyC,GAAE,cAAA/D,OAAgBkK,EAAGrG,KAAI,gBACzC3C,EAAAA,cAAC2F,GAAe,KAAEqD,EAAGrG,KAAKuG,MAAM,EAAG,GAAGC,eAG5C,IACAnJ,EAAAA,cAACyF,GAAS,CAACvE,QAASiH,IAAwB,MAE9CnI,EAAAA,cAAC+E,GAAQ,KACP/E,EAAAA,cAACiF,GAAa,CAAC/D,QAASoH,IAAsB,UAC9CtI,EAAAA,cAACmF,GAAU,KACTnF,EAAAA,cAAC+D,EAAI,CAAClG,KAAMoJ,EAAoBnJ,aAAcwK,GAAsBtE,MAAO,CAAE+E,IAAK,GAAIK,KAAM,KAC1FpJ,EAAAA,cAACqF,GAAc,KACbrF,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,UAAQkB,QAASsH,IAAwB,kBACzCxI,EAAAA,cAAA,UAAQkB,QAASqH,IAAmB,UACpCvI,EAAAA,cAAA,UAAQkB,QAAS8G,IAAU,UAG/BhI,EAAAA,cAACqJ,EAAW,MACZrJ,EAAAA,cAACsJ,EAAM,QAGXtJ,EAAAA,cAACuF,GAAK,KACJvF,EAAAA,cAACuJ,EAAAA,GAAM,KACLvJ,EAAAA,cAACwJ,EAAAA,GAAK,CAACC,KAAK,yCAAyCC,UAAWrD,KAChErG,EAAAA,cAACwJ,EAAAA,GAAK,CAACC,KAAK,+BAA+BC,UAAWnD,QAI5DvG,EAAAA,cAACC,EAAAA,EAAK,CAACpC,KAAM6I,EAA0B5I,aAAcA,IACnDkC,EAAAA,cAAA,QAAME,SAAUkI,IACdpI,EAAAA,cAACG,EAAAA,GAAK,CAACC,GAAG,mBACRJ,EAAAA,cAAA,YAAM,aACNA,EAAAA,cAACK,EAAAA,GAAK,CAACD,GAAG,YAAYE,MAAO+G,EAAc9G,SAAU+G,KAEvDtH,EAAAA,cAACG,EAAAA,GAAK,CAACC,GAAG,uBACRJ,EAAAA,cAAA,YAAM,cACNA,EAAAA,cAACK,EAAAA,GAAK,CAACD,GAAG,YAAYE,MAAOmH,EAAQlH,SAAUmH,KAEjD1H,EAAAA,cAACQ,EAAAA,GAAM,CAACC,KAAK,UAAS,UAG1BT,EAAAA,cAAC2J,GAAkB,CACjB9L,KAAMuJ,EACNtJ,aAAcA,GACd+H,0BAA2BA,IAE7B7F,EAAAA,cAAC4J,EAAoB,CACnB/L,KAAMgJ,EACN/I,aAAcA,GACd8F,4BAA6BA,IAE/B5D,EAAAA,cAAC6J,EAAAA,EAAkB,CACjBhM,KAAMkJ,EACNjJ,aAAcA,GACdC,0BAA2BA,KAnFxBiC,EAAAA,cAAC8J,EAAAA,GAAQ,CAACjH,GAAG,UAuFxB,C,gQCxOO,IAAMuB,EAASzD,EAAAA,EAAAA,OAAaC,IAAAA,EAAAC,EAAA,yQAWtBkJ,EAAOpJ,EAAAA,EAAAA,KAAWI,IAAAA,EAAAF,EAAA,mEAMlBV,EAAQQ,EAAAA,EAAAA,MAAY2D,IAAAA,EAAAzD,EAAA,4NAapBR,EAAQM,EAAAA,EAAAA,MAAY6D,IAAAA,EAAA3D,EAAA,0qBAsBpBL,EAASG,EAAAA,EAAAA,OAAa+D,IAAAA,EAAA7D,EAAA,snBA4BtBmJ,EAAQrJ,EAAAA,EAAAA,IAAUiE,IAAAA,EAAA/D,EAAA,0EAMlBoJ,EAAUtJ,EAAAA,EAAAA,IAAUmE,IAAAA,EAAAjE,EAAA,mDAKpBqJ,EAAgBvJ,EAAAA,EAAAA,EAAQqE,IAAAA,EAAAnE,EAAA,4P,uECpFrC,QAPgB,SAACwH,GAAW,OAC1BhJ,IAAAA,IACOgJ,EAAK,CACRjC,iBAAiB,IAElB7G,MAAK,SAACO,GAAQ,OAAKA,EAASlB,IAAI,GAAC,C","sources":["webpack://sleact-ts-front/./components/InviteChannelModal/index.tsx","webpack://sleact-ts-front/./components/Modal/styles.tsx","webpack://sleact-ts-front/./components/Modal/index.tsx","webpack://sleact-ts-front/./hooks/useInput.ts","webpack://sleact-ts-front/./hooks/useSocket.ts","webpack://sleact-ts-front/./components/DMList/styles.tsx","webpack://sleact-ts-front/./components/ChannelList/index.tsx","webpack://sleact-ts-front/./components/DMList/index.tsx","webpack://sleact-ts-front/./components/InviteWorkspaceModal/index.tsx","webpack://sleact-ts-front/./components/Menu/styles.tsx","webpack://sleact-ts-front/./components/Menu/index.tsx","webpack://sleact-ts-front/./layouts/Workspace/styles.tsx","webpack://sleact-ts-front/./components/CreateChannelModal/index.tsx","webpack://sleact-ts-front/./layouts/Workspace/index.tsx","webpack://sleact-ts-front/./pages/SignUp/styles.tsx","webpack://sleact-ts-front/./utils/fetcher.ts"],"sourcesContent":["import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteChannelModal: (flag: boolean) => void;\n}\nconst InviteChannelModal: FC<Props> = ({ show, onCloseModal, setShowInviteChannelModal }) => {\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\n  const { mutate: revalidateMembers } = useSWR<IUser[]>(\n    userData && channel ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\n    fetcher,\n  );\n\n  const onInviteMember = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!newMember || !newMember.trim()) {\n        return;\n      }\n      axios\n        .post(`/api/workspaces/${workspace}/channels/${channel}/members`, {\n          email: newMember,\n        })\n        .then(() => {\n          revalidateMembers();\n          setShowInviteChannelModal(false);\n          setNewMember('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newMember],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onInviteMember}>\n        <Label id=\"member-label\">\n          <span>채널 멤버 초대</span>\n          <Input id=\"member\" value={newMember} onChange={onChangeNewMember} />\n        </Label>\n        <Button type=\"submit\">초대하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteChannelModal;\n","import styled from '@emotion/styled';\n\nexport const CreateModal = styled.div`\n  position: fixed;\n  text-align: center;\n  left: 0;\n  bottom: 0;\n  top: 0;\n  right: 0;\n  z-index: 1022;\n  & > div {\n    margin-top: 200px;\n    display: inline-block;\n    width: 440px;\n    background: white;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    max-width: 440px;\n    padding: 30px 40px 0;\n    z-index: 1012;\n    position: relative;\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import { CloseModalButton, CreateModal } from '@components/Modal/styles';\nimport React, { FC, useCallback } from 'react';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n}\nconst Modal: FC<Props> = ({ show, children, onCloseModal }) => {\n  const stopPropagation = useCallback((e) => {\n    e.stopPropagation();\n  }, []);\n\n  if (!show) {\n    return null;\n  }\n  return (\n    <CreateModal onClick={onCloseModal}>\n      <div onClick={stopPropagation}>\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\n        {children}\n      </div>\n    </CreateModal>\n  );\n};\n\nexport default Modal;\n","import { Dispatch, SetStateAction, useCallback, useState, ChangeEvent } from 'react';\n\ntype ReturnTypes<T> = [T, (e: ChangeEvent<HTMLInputElement>) => void, Dispatch<SetStateAction<T>>];\n\nconst useInput = <T>(initialData: T): ReturnTypes<T> => {\n  const [value, setValue] = useState(initialData);\n  const handler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value as unknown as T);\n  }, []);\n  return [value, handler, setValue];\n};\n\nexport default useInput;\n\n//🔥ts로 시작하는 에러는 타입스크립트 에러\n//🔥🔥ts가 js의 변수, 매개변수, return값에 타입을 붙여줘야함\n//🔥🔥🔥특히 매개변수는 타입을 붙여줘야 에러가 안난다.\n\n//as unknown as T -> 타입스크립트에서 타입을 강제로 바꿔주는 방법\n","import io from 'socket.io-client';\nimport { useCallback } from 'react';\n\nconst backUrl = 'http://localhost:3095';\n\nconst sockets: { [key: string]: SocketIOClient.Socket } = {};\nconst useSocket = (workspace?: string): [SocketIOClient.Socket | undefined, () => void] => {\n  console.log('rerender', workspace);\n  const disconnect = useCallback(() => {\n    if (workspace) {\n      sockets[workspace].disconnect();\n      delete sockets[workspace];\n    }\n  }, [workspace]);\n\n  if (!workspace) {\n    return [undefined, disconnect];\n  }\n\n  if (!sockets[workspace]) {\n    sockets[workspace] = io.connect(`${backUrl}/ws-${workspace}`, {\n      transports: ['websocket'],\n    });\n  }\n\n  return [sockets[workspace], disconnect];\n};\n\nexport default useSocket;\n","import styled from '@emotion/styled';\n\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\n  background: transparent;\n  border: none;\n  width: 26px;\n  height: 26px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  margin-left: 10px;\n  cursor: pointer;\n  ${({ collapse }) =>\n    collapse &&\n    `\n    & i {\n      transform: none;\n    }\n  `};\n`;\n","// import useSocket from '@hooks/useSocket';\nimport { CollapseButton } from '@components/DMList/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { FC, useCallback, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useSWR from 'swr';\n\n//swr을 쓰면서 props로 데이터를 넘겨줄 필요 없이 바로 swr을 써줌\n\nconst ChannelList: FC = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  // const [socket] = useSocket(workspace);\n\n  const {\n    data: userData,\n    error,\n    mutate,\n  } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  //swr장점은 자식에게 props넘겨주는 방식이 아니라서, 자식과 부모의 연결고리가 줄어들어서 리랜더링이 줄어듬, 최적화 원리랑 비슷함\n\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\n\n  const [channelCollapse, setChannelCollapse] = useState(false);\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Channels</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          channelData?.map((channel) => {\n            return (\n              <NavLink\n                key={channel.name}\n                activeClassName=\"selected\"\n                to={`/workspace/${workspace}/channel/${channel.name}`}\n              >\n                <span># {channel.name}</span>\n              </NavLink>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default ChannelList;\n","import { CollapseButton } from '@components/DMList/styles';\nimport useSocket from '@hooks/useSocket';\nimport { IDM, IUser, IUserWithOnline } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst DMList: FC = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n\n  const {\n    data: userData,\n    error,\n    mutate,\n  } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\n    userData ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n  const [socket] = useSocket(workspace);\n  const [channelCollapse, setChannelCollapse] = useState(false);\n  const [onlineList, setOnlineList] = useState<number[]>([]);\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  useEffect(() => {\n    console.log('DMList: workspace 바꼈다', workspace);\n    setOnlineList([]);\n  }, [workspace]);\n\n  useEffect(() => {\n    socket?.on('onlineList', (data: number[]) => {\n      setOnlineList(data);\n    });\n    // socket?.on('dm', onMessage);\n    // console.log('socket on dm', socket?.hasListeners('dm'), socket);\n    return () => {\n      // socket?.off('dm', onMessage);\n      // console.log('socket off dm', socket?.hasListeners('dm'));\n      socket?.off('onlineList');\n    };\n  }, [socket]);\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Direct Messages</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          memberData?.map((member) => {\n            const isOnline = onlineList.includes(member.id);\n            return (\n              <NavLink key={member.id} activeClassName=\"selected\" to={`/workspace/${workspace}/dm/${member.id}`}>\n                <i\n                  className={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${\n                    isOnline ? 'c-presence--active c-icon--presence-online' : 'c-icon--presence-offline'\n                  }`}\n                  aria-hidden=\"true\"\n                  data-qa=\"presence_indicator\"\n                  data-qa-presence-self=\"false\"\n                  data-qa-presence-active=\"false\"\n                  data-qa-presence-dnd=\"false\"\n                />\n                <span>{member.nickname}</span>\n                {member.id === userData?.id && <span> (나)</span>}\n              </NavLink>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default DMList;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\n}\nconst InviteWorkspaceModal: FC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\n  const { mutate: revalidateMember } = useSWR<IChannel[]>(\n    userData ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n\n  const onInviteMember = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!newMember || !newMember.trim()) {\n        return;\n      }\n      axios\n        .post(`/api/workspaces/${workspace}/members`, {\n          email: newMember,\n        })\n        .then((response) => {\n          revalidateMember();\n          setShowInviteWorkspaceModal(false);\n          setNewMember('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [workspace, newMember],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onInviteMember}>\n        <Label id=\"member-label\">\n          <span>이메일</span>\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember} />\n        </Label>\n        <Button type=\"submit\">초대하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteWorkspaceModal;\n","import styled from '@emotion/styled';\n\nexport const CreateMenu = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1000;\n  & > div {\n    position: absolute;\n    display: inline-block;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    min-width: 360px;\n    z-index: 512;\n    max-height: calc(100vh - 20px);\n    color: rgb(29, 28, 29);\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import React, { CSSProperties, FC, useCallback } from 'react';\nimport { CloseModalButton, CreateMenu } from './styles';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: (e: any) => void;\n  style: CSSProperties;\n  closeButton?: boolean;\n}\nconst Menu: FC<Props> = ({ children, style, show, onCloseModal, closeButton }) => {\n  const stopPropagation = useCallback((e) => {\n    e.stopPropagation();\n  }, []);\n\n  if (!show) return null;\n\n  return (\n    <CreateMenu onClick={onCloseModal}>\n      <div style={style} onClick={stopPropagation}>\n        {closeButton && <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>}\n        {children}\n      </div>\n    </CreateMenu>\n  );\n};\nMenu.defaultProps = {\n  closeButton: true,\n};\n\nexport default Menu;\n","import styled from '@emotion/styled';\n\nexport const RightMenu = styled.div`\n  float: right;\n`;\n\nexport const Header = styled.header`\n  height: 38px;\n  background: #350d36;\n  color: #ffffff;\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\n  padding: 5px;\n  text-align: center;\n`;\n\nexport const ProfileImg = styled.img`\n  width: 28px;\n  height: 28px;\n  position: absolute;\n  top: 5px;\n  right: 16px;\n`;\n\nexport const ProfileModal = styled.div`\n  display: flex;\n  padding: 20px;\n  & img {\n    display: flex;\n  }\n  & > div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 10px;\n  }\n  & #profile-name {\n    font-weight: bold;\n    display: inline-flex;\n  }\n  & #profile-active {\n    font-size: 13px;\n    display: inline-flex;\n  }\n`;\n\nexport const LogOutButton = styled.button`\n  border: none;\n  width: 100%;\n  border-top: 1px solid rgb(29, 28, 29);\n  background: transparent;\n  display: block;\n  height: 33px;\n  padding: 5px 20px 5px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceWrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Workspaces = styled.div`\n  width: 65px;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  background: #3f0e40;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-right: 1px solid rgb(82, 38, 83);\n  vertical-align: top;\n  text-align: center;\n  padding: 15px 0 0;\n`;\n\nexport const Channels = styled.nav`\n  width: 260px;\n  display: inline-flex;\n  flex-direction: column;\n  background: #3f0e40;\n  color: rgb(188, 171, 188);\n  vertical-align: top;\n  & a {\n    padding-left: 36px;\n    color: inherit;\n    text-decoration: none;\n    height: 28px;\n    line-height: 28px;\n    display: flex;\n    align-items: center;\n    &.selected {\n      color: white;\n    }\n  }\n  & .bold {\n    color: white;\n    font-weight: bold;\n  }\n  & .count {\n    margin-left: auto;\n    background: #cd2553;\n    border-radius: 16px;\n    display: inline-block;\n    font-size: 12px;\n    font-weight: 700;\n    height: 18px;\n    line-height: 18px;\n    padding: 0 9px;\n    color: white;\n    margin-right: 16px;\n  }\n  & h2 {\n    height: 36px;\n    line-height: 36px;\n    margin: 0;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    font-size: 15px;\n  }\n`;\n\nexport const WorkspaceName = styled.button`\n  height: 64px;\n  line-height: 64px;\n  border: none;\n  width: 100%;\n  text-align: left;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-bottom: 1px solid rgb(82, 38, 83);\n  font-weight: 900;\n  font-size: 24px;\n  background: transparent;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  padding: 0;\n  padding-left: 16px;\n  margin: 0;\n  color: white;\n  cursor: pointer;\n`;\n\nexport const MenuScroll = styled.div`\n  height: calc(100vh - 102px);\n  overflow-y: auto;\n`;\n\nexport const WorkspaceModal = styled.div`\n  padding: 10px 0 0;\n  & h2 {\n    padding-left: 20px;\n  }\n  & > button {\n    width: 100%;\n    height: 28px;\n    padding: 4px;\n    border: none;\n    background: transparent;\n    border-top: 1px solid rgb(28, 29, 28);\n    cursor: pointer;\n    &:last-of-type {\n      border-bottom: 1px solid rgb(28, 29, 28);\n    }\n  }\n`;\n\nexport const Chats = styled.div`\n  flex: 1;\n`;\n\nexport const AddButton = styled.button`\n  color: white;\n  font-size: 24px;\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceButton = styled.button`\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  border-radius: 10px;\n  background: white;\n  border: 3px solid #3f0e40;\n  margin-bottom: 15px;\n  font-size: 18px;\n  font-weight: 700;\n  color: black;\n  cursor: pointer;\n`;\n","import React, { useCallback, VFC } from 'react';\nimport Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport fetcher from '@utils/fetcher';\nimport useSWR from 'swr';\nimport { IChannel, IUser } from '@typings/db';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowCreateChannelModal: (flag: boolean) => void;\n}\n\nconst CreateChannelModal: VFC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\n  const [newChannel, onChangeNewChannel, setNewChannel] = useInput('');\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n\n  const {\n    data: userData,\n    error,\n    mutate,\n  } = useSWR<IUser | false>('/api/users', fetcher, {\n    dedupingInterval: 2000,\n  });\n\n  const { data: channelData, mutate: reavalidateChannel } = useSWR<IChannel[]>(\n    userData ? `/api/workspaces/${workspace}/channels` : null,\n    fetcher,\n  );\n\n  const onCreateChannel = useCallback(\n    (e) => {\n      e.preventDefault();\n      axios\n        .post(\n          `/api/workspaces/${workspace}/channels`,\n          {\n            name: newChannel,\n          },\n          {\n            withCredentials: true,\n          },\n        )\n        .then(() => {\n          setShowCreateChannelModal(false);\n          setNewChannel('');\n          reavalidateChannel();\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newChannel, setNewChannel, setShowCreateChannelModal, workspace],\n  );\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onCreateChannel}>\n        <Label id=\"channel-label\">\n          <span>채널</span>\n          <Input id=\"channel\" value={newChannel} onChange={onChangeNewChannel} />\n        </Label>\n        <Button type=\"submit\">생성하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default CreateChannelModal;\n","import ChannelList from '@components/ChannelList';\nimport DMList from '@components/DMList';\nimport InviteChannelModal from '@components/InviteChannelModal';\nimport InviteWorkspaceModal from '@components/InviteWorkspaceModal';\nimport Menu from '@components/Menu';\nimport Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport useSocket from '@hooks/useSocket';\nimport {\n  AddButton,\n  Channels,\n  Chats,\n  Header,\n  LogOutButton,\n  MenuScroll,\n  ProfileImg,\n  ProfileModal,\n  RightMenu,\n  WorkspaceButton,\n  WorkspaceModal,\n  WorkspaceName,\n  Workspaces,\n  WorkspaceWrapper,\n} from '@layouts/Workspace/styles';\nimport loadable from '@loadable/component';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { VFC, useCallback, useState, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport useSWR from 'swr';\nimport gravatar from 'gravatar';\nimport { toast } from 'react-toastify';\nimport CreateChannelModal from '@components/CreateChannelModal';\n\nconst Channel = loadable(() => import('@pages/Channel'));\nconst DirectMessage = loadable(() => import('@pages/DirectMessage'));\n\nconst Workspace: VFC = () => {\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState(false);\n  const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\n  const [showWorkspaceModal, setShowWorkspaceModal] = useState(false);\n  const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\n  const [newWorkspace, onChangeNewWorkspace, setNewWorkpsace] = useInput('');\n  const [newUrl, onChangeNewUrl, setNewUrl] = useInput('');\n\n  const { workspace } = useParams<{ workspace: string }>();\n  const {\n    data: userData,\n    error,\n    mutate,\n  } = useSWR<IUser | false>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\n  const { data: memberData } = useSWR<IUser[]>(userData ? `/api/workspaces/${workspace}/members` : null, fetcher);\n  const [socket, disconnect] = useSocket(workspace);\n\n  useEffect(() => {\n    if (channelData && userData && socket) {\n      console.log(socket);\n      socket.emit('login', { id: userData.id, channels: channelData.map((v) => v.id) });\n    }\n  }, [socket, channelData, userData]);\n  useEffect(() => {\n    return () => {\n      disconnect();\n    };\n  }, [workspace, disconnect]);\n\n  const onLogout = useCallback(() => {\n    axios\n      .post('/api/users/logout', null, {\n        withCredentials: true,\n      })\n      .then(() => {\n        mutate(false, false);\n      });\n  }, []);\n\n  const onCloseUserProfile = useCallback((e) => {\n    e.stopPropagation();\n    setShowUserMenu(false);\n  }, []);\n\n  const onClickUserProfile = useCallback(() => {\n    setShowUserMenu((prev) => !prev);\n  }, []);\n\n  const onClickCreateWorkspace = useCallback(() => {\n    setShowCreateWorkspaceModal(true);\n  }, []);\n\n  const onCreateWorkspace = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!newWorkspace || !newWorkspace.trim()) return;\n      if (!newUrl || !newUrl.trim()) return;\n      axios\n        .post(\n          '/api/workspaces',\n          {\n            workspace: newWorkspace,\n            url: newUrl,\n          },\n          {\n            withCredentials: true,\n          },\n        )\n        .then(() => {\n          mutate();\n          setShowCreateWorkspaceModal(false);\n          setNewWorkpsace('');\n          setNewUrl('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newWorkspace, newUrl],\n  );\n\n  const onCloseModal = useCallback(() => {\n    setShowCreateWorkspaceModal(false);\n    setShowCreateChannelModal(false);\n    setShowInviteWorkspaceModal(false);\n    setShowInviteChannelModal(false);\n  }, []);\n\n  const toggleWorkspaceModal = useCallback(() => {\n    setShowWorkspaceModal((prev) => !prev);\n  }, []);\n\n  const onClickAddChannel = useCallback(() => {\n    setShowCreateChannelModal(true);\n  }, []);\n\n  const onClickInviteWorkspace = useCallback(() => {\n    setShowInviteWorkspaceModal(true);\n  }, []);\n\n  if (!userData) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div>\n      <Header>\n        <RightMenu>\n          <span onClick={onClickUserProfile}>\n            <ProfileImg src={gravatar.url(userData.email, { s: '28px', d: 'retro' })} alt={userData.nickname} />\n            {showUserMenu && (\n              <Menu style={{ right: 0, top: 38 }} show={showUserMenu} onCloseModal={onCloseUserProfile}>\n                <ProfileModal>\n                  <img src={gravatar.url(userData.nickname, { s: '36px', d: 'retro' })} alt={userData.nickname} />\n                  <div>\n                    <span id=\"profile-name\">{userData.nickname}</span>\n                    <span id=\"profile-active\">Active</span>\n                  </div>\n                </ProfileModal>\n                <LogOutButton onClick={onLogout}>로그아웃</LogOutButton>\n              </Menu>\n            )}\n          </span>\n        </RightMenu>\n      </Header>\n      <WorkspaceWrapper>\n        <Workspaces>\n          {userData?.Workspaces.map((ws) => {\n            return (\n              <Link key={ws.id} to={`/workspace/${ws.name}/channel/일반`}>\n                <WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\n              </Link>\n            );\n          })}\n          <AddButton onClick={onClickCreateWorkspace}>+</AddButton>\n        </Workspaces>\n        <Channels>\n          <WorkspaceName onClick={toggleWorkspaceModal}>Sleact</WorkspaceName>\n          <MenuScroll>\n            <Menu show={showWorkspaceModal} onCloseModal={toggleWorkspaceModal} style={{ top: 95, left: 80 }}>\n              <WorkspaceModal>\n                <h2>Sleact</h2>\n                <button onClick={onClickInviteWorkspace}>워크스페이스에 사용자 초대</button>\n                <button onClick={onClickAddChannel}>채널 만들기</button>\n                <button onClick={onLogout}>로그아웃</button>\n              </WorkspaceModal>\n            </Menu>\n            <ChannelList />\n            <DMList />\n          </MenuScroll>\n        </Channels>\n        <Chats>\n          <Switch>\n            <Route path=\"/workspace/:workspace/channel/:channel\" component={Channel} />\n            <Route path=\"/workspace/:workspace/dm/:id\" component={DirectMessage} />\n          </Switch>\n        </Chats>\n      </WorkspaceWrapper>\n      <Modal show={showCreateWorkspaceModal} onCloseModal={onCloseModal}>\n        <form onSubmit={onCreateWorkspace}>\n          <Label id=\"workspace-label\">\n            <span>워크스페이스 이름</span>\n            <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\n          </Label>\n          <Label id=\"workspace-url-label\">\n            <span>워크스페이스 url</span>\n            <Input id=\"workspace\" value={newUrl} onChange={onChangeNewUrl} />\n          </Label>\n          <Button type=\"submit\">생성하기</Button>\n        </form>\n      </Modal>\n      <CreateChannelModal\n        show={showCreateChannelModal}\n        onCloseModal={onCloseModal}\n        setShowCreateChannelModal={setShowCreateChannelModal}\n      />\n      <InviteWorkspaceModal\n        show={showInviteWorkspaceModal}\n        onCloseModal={onCloseModal}\n        setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\n      />\n      <InviteChannelModal\n        show={showInviteChannelModal}\n        onCloseModal={onCloseModal}\n        setShowInviteChannelModal={setShowInviteChannelModal}\n      />\n    </div>\n  );\n};\n\nexport default Workspace;\n\n// import React, { VFC, useCallback, useState, useEffect } from 'react';\n// import fetcher from '@utils/fetcher';\n// import useSWR from 'swr';\n// import axios from 'axios';\n// import { Route, Switch, Link, Redirect, useParams } from 'react-router-dom';\n// import { IChannel, IUser } from '@typings/db';\n// import {\n//   Header,\n//   RightMenu,\n//   ProfileImg,\n//   LogOutButton,\n//   WorkspaceWrapper,\n//   Workspaces,\n//   Channels,\n//   WorkspaceName,\n//   MenuScroll,\n//   WorkspaceModal,\n//   Chats,\n//   AddButton,\n//   WorkspaceButton,\n//   ProfileModal,\n// } from '@layouts/Workspace/styles';\n// import gravatar from 'gravatar';\n// import loadable from '@loadable/component';\n// import Menu from '@components/Menu';\n// import { Button, Input, Label } from '@pages/SignUp/styles';\n// import useInput from '@hooks/useInput';\n// import Modal from '@components/Modal';\n// import CreateChannelModal from '@components/CreateChannelModal';\n// import { toast } from 'react-toastify';\n\n// import InviteWorkspaceModal from '@components/InviteWorkspaceModal';\n// import InviteChannelModal from '@components/InviteChannelModal';\n// import DMList from '@components/DMList';\n// import ChannelList from '@components/ChannelList';\n// import useSocket from '@hooks/useSocket';\n\n// const Channel = loadable(() => import('@pages/Channel'));\n// const DirectMessage = loadable(() => import('@pages/DirectMessage'));\n\n// const Workspace: VFC = () => {\n//   //FC안에 children들어있음... 다른 컴포넌트 안에 넣은 것이 children이 된다.. !\n//   const [showUserMenu, setShowUserMenu] = useState(false);\n//   const [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState(false);\n//   const [showWorkspaceModal, setShowWorkspaceModal] = useState(false);\n//   const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\n//   const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\n//   const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\n//   const [newWorkspace, onChangeNewWorkspace, setNewWorkspace] = useInput('');\n//   const [newUrl, onChangeNewUrl, setNewUrl] = useInput('');\n\n//   const { workspace } = useParams<{ workspace: string }>();\n\n//   //사용자데이터\n//   const {\n//     data: userData,\n//     error,\n//     mutate,\n//   } = useSWR<IUser | false>('/api/users', fetcher, {\n//     dedupingInterval: 2000,\n//   });\n\n//   //채널데이터\n//   const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\n\n//   //멤버데이터\n//   const { mutate: memberData } = useSWR<IUser[]>(userData ? `/api/workspaces/${workspace}/members` : null, fetcher);\n\n//   const [socket, disconnect] = useSocket(workspace);\n\n//   useEffect(() => {\n//     if (channelData && userData && socket) {\n//       console.log(socket);\n//       socket.emit('login', { id: userData.id, channels: channelData.map((v) => v.id) });\n//     }\n//   }, [socket, channelData, userData]);\n\n//   useEffect(() => {\n//     return () => {\n//       disconnect();\n//     };\n//   }, [workspace, disconnect]);\n\n//   const onLogout = useCallback(() => {\n//     axios\n//       .post('/api/users/logout', null, {\n//         withCredentials: true,\n//       })\n//       .then(() => {\n//         mutate(false, false);\n//       });\n//   }, [mutate]);\n\n//   const onCloseUserProfile = useCallback((e) => {\n//     e.stopPropagation();\n//     setShowUserMenu(false);\n//   }, []);\n\n//   const onClickUserProfile = useCallback(() => {\n//     setShowUserMenu((prev) => !prev);\n//   }, []);\n\n//   const onClickCreateWorkspace = useCallback(() => {\n//     setShowCreateWorkspaceModal(true);\n//   }, []);\n\n//   const onCloseModal = useCallback(() => {\n//     setShowCreateWorkspaceModal(false);\n//     setShowCreateChannelModal(false);\n//     setShowInviteWorkspaceModal(false);\n//     setShowInviteChannelModal(false);\n//   }, []);\n\n//   const onCreateWorkspace = useCallback(\n//     (e) => {\n//       e.preventDefault();\n//       if (!newWorkspace || !newWorkspace.trim()) return;\n//       if (!newUrl || !newUrl.trim()) return;\n//       axios\n//         .post(\n//           '/api/workspaces',\n//           {\n//             workspace: newWorkspace,\n//             url: newUrl,\n//           },\n//           {\n//             withCredentials: true,\n//           },\n//         )\n//         .then(() => {\n//           mutate();\n//           setShowCreateWorkspaceModal(false);\n//           setNewWorkspace('');\n//           setNewUrl('');\n//         })\n//         .catch((error) => {\n//           console.dir(error);\n//           toast.error(error.response?.data, { position: 'bottom-center' });\n//         });\n//     },\n//     [newWorkspace, newUrl],\n//   );\n\n//   const toggleWorkspaceModal = useCallback(() => {\n//     setShowWorkspaceModal((prev) => !prev);\n//   }, []);\n\n//   const onClickAddChannel = useCallback(() => {\n//     setShowCreateChannelModal(true);\n//   }, []);\n\n//   const onClickInviteWorkspace = useCallback(() => {\n//     setShowInviteWorkspaceModal(true);\n//   }, []);\n\n//   if (!userData) {\n//     return <Redirect to=\"/login\" />;\n//   }\n\n//   return (\n//     <div>\n//       <Header>\n//         <RightMenu>\n//           <span onClick={onClickUserProfile}>\n//             <ProfileImg src={gravatar.url(userData.email, { s: '28px', d: 'retro' })} alt={userData.nickname} />\n//             {showUserMenu && (\n//               <Menu style={{ right: 0, top: 38 }} show={showUserMenu} onCloseModal={onCloseUserProfile}>\n//                 <ProfileModal>\n//                   <img src={gravatar.url(userData.email, { s: '36px', d: 'retro' })} alt={userData.nickname} />\n//                   <div>\n//                     <span id=\"profile-name\">{userData.nickname}</span>\n//                     <span id=\"profile-active\">Active</span>\n//                   </div>\n//                 </ProfileModal>\n//                 <LogOutButton onClick={onLogout}>로그아웃</LogOutButton>\n//               </Menu>\n//             )}\n//           </span>\n//         </RightMenu>\n//       </Header>\n//       <WorkspaceWrapper>\n//         <Workspaces>\n//           {userData?.Workspaces?.map((ws) => {\n//             return (\n//               <Link key={ws.id} to={`/workspace/${123}/channel/일반`}>\n//                 <WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\n//               </Link>\n//             );\n//           })}\n//           <AddButton onClick={onClickCreateWorkspace}>+</AddButton>\n//         </Workspaces>\n//         <Channels>\n//           <WorkspaceName onClick={toggleWorkspaceModal}>sleact</WorkspaceName>\n//           <MenuScroll>\n//             <Menu show={showWorkspaceModal} onCloseModal={toggleWorkspaceModal} style={{ top: 95, left: 80 }}>\n//               <WorkspaceModal>\n//                 <h2>Sleact</h2>\n//                 <button onClick={onClickInviteWorkspace}>워크스페이스에 사용자 초대</button>\n//                 <button onClick={onClickAddChannel}>채널 만들기</button>\n//                 <button onClick={onLogout}>로그아웃</button>\n//               </WorkspaceModal>\n//             </Menu>\n//             <ChannelList />\n//             <DMList />\n//           </MenuScroll>\n//         </Channels>\n//         <Chats>\n//           <Switch>\n//             <Route path=\"/workspace/:workspace/channel/:channel\" component={Channel} />\n//             <Route path=\"/workspace/:workspace/dm/:id\" component={DirectMessage} />\n//           </Switch>\n//         </Chats>\n//       </WorkspaceWrapper>\n//       <Modal show={showCreateWorkspaceModal} onCloseModal={onCloseModal}>\n//         <form onSubmit={onCreateWorkspace}>\n//           <Label id=\"workspace-label\">\n//             <span>워크스페이스이름</span>\n//             <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\n//           </Label>\n//           <Label id=\"workspace-url-label\">\n//             <span>워크스페이스url</span>\n//             <Input id=\"workspace\" value={newUrl} onChange={onChangeNewUrl} />\n//           </Label>\n//           <Button type=\"submit\">생성하기</Button>\n//         </form>\n//       </Modal>\n//       {/* 🔥인풋이 있는 컴포넌트는 따로 분리하는 것이 리랜더링 줄이는 것에 효과적임! */}\n//       <CreateChannelModal\n//         show={showCreateChannelModal}\n//         onCloseModal={onCloseModal}\n//         setShowCreateChannelModal={setShowCreateChannelModal}\n//       />\n//       <InviteWorkspaceModal\n//         show={showInviteWorkspaceModal}\n//         onCloseModal={onCloseModal}\n//         setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\n//       />\n//       <InviteChannelModal\n//         show={showInviteChannelModal}\n//         onCloseModal={onCloseModal}\n//         setShowInviteChannelModal={setShowInviteChannelModal}\n//       />\n//     </div>\n//   );\n// };\n\n// export default Workspace;\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background-color: #4a154b;\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n  &:hover {\n    background-color: rgba(74, 21, 75, 0.9);\n    border: none;\n  }\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Error = styled.div`\n  color: #e01e5a;\n  margin: 8px 0 16px;\n  font-weight: bold;\n`;\n\nexport const Success = styled.div`\n  color: #2eb67d;\n  font-weight: bold;\n`;\n\nexport const LinkContainer = styled.p`\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import axios from 'axios';\n\nconst fetcher = (url: string) =>\n  axios\n    .get(url, {\n      withCredentials: true, //쿠키공유하기\n    })\n    .then((response) => response.data); //swr에서 넘겨준 api가 오면 axios.get요청을 보낸다\n//fetcher에서 넣은 주소를 매개변수로 넣어주고, 응답값에서 data꺼내 줌\nexport default fetcher;\n"],"names":["_ref","show","onCloseModal","setShowInviteChannelModal","_useParams","useParams","workspace","channel","_useInput2","useInput","newMember","onChangeNewMember","setNewMember","userData","useSWR","fetcher","data","revalidateMembers","concat","mutate","onInviteMember","useCallback","e","preventDefault","trim","axios","email","then","catch","error","_error$response","console","dir","toast","response","position","React","Modal","onSubmit","Label","id","Input","value","onChange","Button","type","CreateModal","styled","_templateObject","_taggedTemplateLiteral","CloseModalButton","_templateObject2","children","stopPropagation","onClick","initialData","_useState2","useState","setValue","target","sockets","log","disconnect","io","transports","undefined","CollapseButton","collapse","_useSWR","dedupingInterval","channelData","channelCollapse","setChannelCollapse","toggleChannelCollapse","prev","className","map","NavLink","key","name","activeClassName","to","memberData","socket","_slicedToArray","useSocket","_useState4","onlineList","setOnlineList","useEffect","on","off","member","isOnline","includes","nickname","setShowInviteWorkspaceModal","revalidateMember","CreateMenu","Menu","style","closeButton","defaultProps","RightMenu","Header","ProfileImg","_templateObject3","ProfileModal","_templateObject4","LogOutButton","_templateObject5","WorkspaceWrapper","_templateObject6","Workspaces","_templateObject7","Channels","_templateObject8","WorkspaceName","_templateObject9","MenuScroll","_templateObject10","WorkspaceModal","_templateObject11","Chats","_templateObject12","AddButton","_templateObject13","WorkspaceButton","_templateObject14","setShowCreateChannelModal","newChannel","onChangeNewChannel","setNewChannel","_useSWR2","reavalidateChannel","onCreateChannel","withCredentials","Channel","loadable","DirectMessage","showUserMenu","setShowUserMenu","showCreateWorkspaceModal","setShowCreateWorkspaceModal","_useState6","showInviteWorkspaceModal","_useState8","showInviteChannelModal","_useState10","showWorkspaceModal","setShowWorkspaceModal","_useState12","showCreateChannelModal","newWorkspace","onChangeNewWorkspace","setNewWorkpsace","_useInput4","newUrl","onChangeNewUrl","setNewUrl","_useSocket2","emit","channels","v","onLogout","onCloseUserProfile","onClickUserProfile","onClickCreateWorkspace","onCreateWorkspace","url","toggleWorkspaceModal","onClickAddChannel","onClickInviteWorkspace","src","gravatar","s","d","alt","right","top","ws","Link","slice","toUpperCase","left","ChannelList","DMList","Switch","Route","path","component","CreateChannelModal","InviteWorkspaceModal","InviteChannelModal","Redirect","Form","Error","Success","LinkContainer"],"sourceRoot":""}